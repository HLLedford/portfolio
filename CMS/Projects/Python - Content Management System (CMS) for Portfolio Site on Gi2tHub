<div><h3 style="text-align: center;">Python - Content Management System (CMS) for Portfolio Site on GitHub</h3><p style="text-align: left;">Python was not a language I used very much this summer. Consequently, I decided to do a few side projects this summer just for fun and a few of these side projects are in Python. The first of these is this content management system (CMS) I made for my personal Portfolio site hosted on GitHub. I knew senior year would be busy so having a CMS for my Portfolio site allows me to showcase my skills in a convenient and timely manner. Once I finish documenting the code, I will upload it to GitHub.</p><img src="images/CMS/Projects/Files2.png" alt="Files2" style="width:500px;height:500px;text-align: center;"><p style="text-align: left;">The CMS as a whole program consists of 3 different files-CMS.pyCMS.py, CMSParser.pyCMSParser.py, GitHub.py. The only file that needs to be run in order start the CMS is CMS.py. With this project being something I did in my free time for my personal site, I didn't feel like packaging it up properly as I don't really plan to distribute it. I do plan to extend some functionality of the project, eventually.</p><img src="images/CMS/Projects/GitHub.py2.png" alt="GitHub.py2" style="width:500px;height:500px;text-align: center;"><p style="text-align: left;">GitHub.py:</p><p style="text-align: left;">Git integration-committing, pulling, pushing, etc.-is all integrated. The program begins by asking for your GitHub Username, Email, and Repository URL. It then begins by setting up a GitHub object using the GitHub class; this object is basically an interface for a repository. The GitHub class uses its parameters (GitHub information) to allow for interaction with a git repository from wherever the user is running the CMS.py file. If the repository is already found, the GitHub class ensures the repository is up to date. The GitHub objects can list the contents of their repository. The contents of a repository belong to one of three sections-'Projects', 'About', 'Blog'. The GitHub object is able to list the files found under each section along with their accompanying images.</p><img src="images/CMS/Projects/CMSParser.py2.png" alt="CMSParser.py2" style="width:500px;height:500px;text-align: center;"><p style="text-align: left;">CMSParser.py:</p><p style="text-align: left;">The CMSParser class creates objects that hold the contents of a file from a section. The CMSParser object holds the heading text of the entry, the images of the entry if there are any, the paragraphs of the entry, and the layout of the entry. CMSParser objects allow the CMS to present entries in an editable way. CMSParser parses written HTML of the entry file to build itself.</p><img src="images/CMS/Projects/CMS.py2.png" alt="CMS.py2" style="width:500px;height:500px;text-align: center;"><p style="text-align: left;">The CMS Class is the only file that needs to be run. It imports the GitHub class and CMSParser class. Leveraging a GitHub object and CMSParser objects, a lightweight CMS is achievable. The below images kinda show how the CMS functions. As mentioned above, the GUI is ugly but my project did come together and it does function, so I am happy.</p><p style="text-align: left;">1. Setup</p><img src="images/CMS/Projects/Setup2.png" alt="Setup2" style="width:500px;height:500px;text-align: center;"><p style="text-align: left;">2. Start</p><img src="images/CMS/Projects/Start2.png" alt="Start2" style="width:500px;height:500px;text-align: center;"><p style="text-align: left;">3. Sections</p><img src="images/CMS/Projects/Sections2.png" alt="Sections2" style="width:500px;height:500px;text-align: center;"><p style="text-align: left;">4. Actions</p><img src="images/CMS/Projects/Actions2.png" alt="Actions2" style="width:500px;height:500px;text-align: center;"><p style="text-align: left;">5. Contents</p><img src="images/CMS/Projects/Contents2.png" alt="Contents2" style="width:500px;height:500px;text-align: center;"><p style="text-align: left;">6. Edit</p><img src="images/CMS/Projects/Edit2.png" alt="Edit2" style="width:500px;height:500px;text-align: center;"></div>